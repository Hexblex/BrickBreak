//AS3ExporterAIR version 2.3, code Flash 10, generated by Prefab3D: http://www.closier.nl/prefab
package _Base._Game._Bombs._Meshes
{
	import away3d.containers.ObjectContainer3D;
	import away3d.containers.Scene3D;
	import away3d.core.base.*;
	import away3d.loaders.data.*;
	import away3d.loaders.utils.*;
	import away3d.materials.*;
	import away3d.primitives.*;
	
	import flash.display.Bitmap;
	import flash.display.BitmapData;
	import flash.geom.*;
	import flash.utils.Dictionary;
	
	public class BombMesh extends ObjectContainer3D
	{
		
		[Embed(source="./assets/textures/Bombs/health_texture.jpg")]
		private var health_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/fire_texture.jpg")]
		private var fire_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/water_texture.jpg")]
		private var water_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/acid_texture.jpg")]
		private var acid_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/ice_texture.jpg")]
		private var ice_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/joker_texture.jpg")]
		private var joker_texture:Class;
		
		[Embed(source="./assets/textures/Bombs/shield_texture.jpg")]
		private var shield_texture:Class;
		
		private var objs:Object = {};
		private var geos:Array = [];
		private var oList:Array =[];
		private var aC:Array;
		private var aV:Array;
		private var aU:Array;
		private var _scale:Number;
		
		private var _textureDataMap:Dictionary;
		
		public function BombMesh(scale:Number = 1)
		{
			_textureDataMap = new Dictionary();
			
			_scale = scale;
			
			setSource();
			addContainers();
			buildMeshes();
			buildMaterials();
			cleanUp();
		}
		
		public function getTextureData(type:String):BitmapData
		{
			return (_textureDataMap[type] as Bitmap).bitmapData;
		}
		
		private function buildMeshes():void
		{
			var m0:Matrix3D = new Matrix3D();
			m0.rawData = Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0*_scale,-1.293849999999999*_scale,0*_scale,1]);
			transform = m0;
			
			objs.obj0 = {name:"bomb",  transform:m0, pivotPoint:new Vector3D(0,0,0), container:1, bothsides:false, material:null, ownCanvas:false, pushfront:false, pushback:false};
			objs.obj0.geo=geos[0];
			
			var ref:Object;
			var mesh:Mesh;
			var j:int;
			var av:Array;
			var au:Array;
			var v0:Vertex;
			var v1:Vertex;
			var v2:Vertex;
			var u0:UV;
			var u1:UV;
			var u2:UV;
			var aRef:Vector.<Face>;
			for(var i:int = 0;i<1;++i){
				ref = objs["obj"+i];
				if(ref != null){
					mesh = new Mesh();
					mesh.type = ".as";
					mesh.bothsides = ref.bothsides;
					mesh.name = ref.name;
					mesh.pushfront = ref.pushfront;
					mesh.pushback = ref.pushback;
					mesh.ownCanvas = ref.ownCanvas;
					if(aC[ref.container]!= null)
						aC[ref.container].addChild(mesh);
					
					oList.push(mesh);
					mesh.transform = ref.transform;
					mesh.movePivot(ref.pivotPoint.x, ref.pivotPoint.y, ref.pivotPoint.z);
					if (ref.geo.geometry != null) {
						mesh.geometry = ref.geo.geometry;
						continue;
					}
					ref.geo.geometry = new Geometry();
					mesh.geometry = ref.geo.geometry;
					aRef = ref.geo.f;
					for(j = 0;j<aRef.length;++j){
						Face(aRef[j]).material = ref.material;
						ref.geo.geometry.addFace( Face(aRef[j]));
					}
					
				}
			}
		}
		
		private function setSource():void
		{
			var geo0vert:String ="-d.15154e2bf47ff/-28.22a1c11d453fc/6.18f5bef855801,-4.1d1f/-2b.3647/5.21c5a8193c2006,-6.30bccfe6e2fff/-2b.3647/3.bcf,-9.fd/-28.22a1c11d453fc/b.178d,-1.1b18/-2b.3647/7.106b,-3.bcf/-28.22a1c11d453fc/e.124d,1.1b18/-2b.3647/7.106b,3.bcf/-28.22a1c11d453fc/e.124d,4.1d1f/-2b.3647/5.21c5a8193c2006,9.fd/-28.22a1c11d453fc/b.178d,6.30bccfe6e2fff/-2b.3647/3.abe4fddccfffc,d.15154e2bf47ff/-28.22a1c11d453fc/6.18f5bef855801,7.15b5ec1038effb/-2b.3647/0,e.20d6/-28.22a1c11d453fc/0,6.30bccfe6e2fff/-2b.3647/-3.bcf,d.15154e2bf47ff/-28.22a1c11d453fc/-6.18f5bef855801,4.1d1f/-2b.3647/-5.21c5a8193c2006,9.fd/-28.22a1c11d453fc/-b.178c,1.1b18/-2b.3647/-7.106b,3.abe4fddccfffc/-28.22a1c11d453fc/-e.124d,-1.1b18/-2b.3647/-7.106b,-3.bcf/-28.22a1c11d453fc/-e.124d,-4.1d1f/-2b.3647/-5.21c5a8193c2006,-9.fd/-28.22a1c11d453fc/-b.178c,-6.30bccfe6e2fff/-2b.3647/-3.bcf,-d.15154e2bf47ff/-28.22a1c11d453fc/-6.18f5bef855801,-7.15b5ec1038effb/-2b.3647/0,-e.20d6/-28.22a1c11d453fc/0,-13.c2a1c1fb6002/-24.d0b1/9.fd,-d.b95/-24.d0b1/10.2645cdf53c7fe,-4.1d1f/-24.d0b1/14.1ee8,4.1d1f/-24.d0b1/14.1ee8,d.b95/-24.d0b1/10.2645cdf53c7fe,13.c2a1c1fb6002/-24.d0b1/9.fd,15.cbb/-24.d0b1/0,13.c2a1c1fb6002/-24.d0b1/-9.9e1,d.b95/-24.d0b1/-10.2644596dcdffe,4.1d1f/-24.d0b1/-14.1ee8,-4.1d1f/-24.d0b1/-14.1ee8,-d.b95/-24.d0b1/-10.2644596dcdffe,-13.c2a1c1fb6002/-24.d0b1/-9.9e1,-15.cbb/-24.d0b1/0,-18.05520f2c04002/-1f.6ba381b58c07/b.178c,-10.2645cdf53c7fe/-1f.6ba381b58c07/14.3397517992002,-5.21c5a8193c2006/-1f.6ba381b58c07/1a.02ca,5.21c5a8193c2006/-1f.6ba381b58c07/1a.02ca,10.2644596dcdffe/-1f.6ba381b58c07/14.3397517992002,18.05509aa495802/-1f.6ba381b58c07/b.178d,1a.2a2a9c57e8ffe/-1f.6ba381b58c07/0,18.05520f2c04002/-1f.6ba381b58c07/-b.178c,10.2645cdf53c7fe/-1f.6ba381b58c07/-14.3395dcf223802,5.21c5a8193c2006/-1f.6ba381b58c07/-1a.040d8d32c27fd,-5.21c5a8193c2006/-1f.6ba381b58c07/-1a.040d8d32c27fd,-10.2645cdf53c7fe/-1f.6ba381b58c07/-14.3395dcf223802,-18.05520f2c04002/-1f.6ba381b58c07/-b.178c,-1a.2a2a9c57e8ffe/-1f.6ba381b58c07/0,-1b.2fd/-18.23fc170600404/d.15154e2bf47ff,-13.c2a1c1fb6002/-18.23fc170600404/18.05520f2c04002,-14.1ee8/-11.16f06ce662c03/1a.02ca,-1e.01ba/-11.16f06ce662c03/e.124d,-1e.1fe8/-9.1358d/e.20d6,-15.cbb/-9.1358d/1a.2a2a9c57e8ffe,-6.30bccfe6e2fff/-18.23fc170600404/1e.01ba,-7.106b/-11.16f06ce662c03/20.13f1,-7.15b5ec1038effb/-9.1358d/21.d89,6.30bccfe6e2fff/-18.23fc170600404/1e.01ba,7.106b/-11.16f06ce662c03/20.13f1,7.15b5ec1038effb/-9.1358d/21.d89,13.c2a1c1fb6002/-18.23fc170600404/18.05520f2c04002,14.1ee8/-11.16f06ce662c03/1a.02ca,15.cbb/-9.1358d/1a.2a2a9c57e8ffe,1b.2fd/-18.23fc170600404/d.15154e2bf47ff,1e.01ba/-11.16f06ce662c03/e.124d,1e.1fe8/-9.1358d/e.20d6,1e.1fe8/-18.23fc170600404/0,21.d89/-11.16f06ce662c03/0,22.7f9/-9.1358d/0,1b.2fd/-18.23fc170600404/-d.15154e2bf47ff,1e.01ba/-11.16f06ce662c03/-e.124d,1e.1fe8/-9.1358d/-e.20d6,13.c2a1c1fb6002/-18.23fc170600404/-18.05509aa495802,14.1ee8/-11.16f06ce662c03/-1a.040d8d32c27fd,15.cbb/-9.1358d/-1a.2a2a9c57e8ffe,6.30bccfe6e2fff/-18.23fc170600404/-1e.01b9,7.106b/-11.16f06ce662c03/-20.13f0,7.15b5ec1038effb/-9.1358d/-21.d89,-6.30bccfe6e2fff/-18.23fc170600404/-1e.01b9,-7.106b/-11.16f06ce662c03/-20.13f0,-7.15b5ec1038effb/-9.1358d/-21.d89,-13.c2a1c1fb6002/-18.23fc170600404/-18.05509aa495802,-14.1ee8/-11.16f06ce662c03/-1a.040d8d32c27fd,-15.cbb/-9.1358d/-1a.2a2a9c57e8ffe,-1b.2fd/-18.23fc170600404/-d.15154e2bf47ff,-1e.01ba/-11.16f06ce662c03/-e.124d,-1e.1fe8/-9.1358d/-e.20d6,-1e.1fe8/-18.23fc170600404/0,-21.d89/-11.16f06ce662c03/0,-22.7f9/-9.1358d/0,-10.2645cdf53c7fe/b.1e52b81c163fe/14.3397517992002,-13.c2a1c1fb6002/10.172d7/9.fd,-d.b95/10.172d7/10.2645cdf53c7fe,-18.05520f2c04002/b.1e52b81c163fe/b.178c,-13.c2a1c1fb6002/5.02bcacba55bff/18.05520f2c04002,-1b.2fd/5.02bcacba55bff/d.15154e2bf47ff,-14.1ee8/-2.6715e5f4cd806/1a.02ca,-1e.01ba/-2.6715e5f4cd806/e.124d,-5.21c5a8193c2006/b.1e52b81c163fe/1a.02ca,-4.1d1f/10.172d7/14.1ee8,-6.30bccfe6e2fff/5.02bcacba55bff/1e.01ba,-7.106b/-2.6715e5f4cd806/20.13f1,5.21c5a8193c2006/b.1e52b81c163fe/1a.02ca,4.1d1f/10.172d7/14.1ee8,6.30bccfe6e2fff/5.02bcacba55bff/1e.01ba,7.106b/-2.6715e5f4cd806/20.13f1,10.2644596dcdffe/b.1e52b81c163fe/14.3397517992002,d.b95/10.172d7/10.2645cdf53c7fe,13.c2a1c1fb6002/5.02bcacba55bff/18.05520f2c04002,14.1ee8/-2.6715e5f4cd806/1a.02ca,18.05509aa495802/b.1e52b81c163fe/b.178d,13.c2a1c1fb6002/10.172d7/9.fd,1b.2fd/5.02bcacba55bff/d.15154e2bf47ff,1e.01ba/-2.6715e5f4cd806/e.124d,1a.2a2a9c57e8ffe/b.1e52b81c163fe/0,15.cbb/10.172d7/0,1e.1fe8/5.02bcacba55bff/0,21.d89/-2.6715e5f4cd806/0,18.05520f2c04002/b.1e52b81c163fe/-b.178c,13.c2a1c1fb6002/10.172d7/-9.9e1,1b.2fd/5.02bcacba55bff/-d.15154e2bf47ff,1e.01ba/-2.6715e5f4cd806/-e.124d,10.2645cdf53c7fe/b.1e52b81c163fe/-14.3395dcf223802,d.b95/10.172d7/-10.2644596dcdffe,13.c2a1c1fb6002/5.02bcacba55bff/-18.05509aa495802,14.1ee8/-2.6715e5f4cd806/-1a.040d8d32c27fd,5.21c5a8193c2006/b.1e52b81c163fe/-1a.040d8d32c27fd,4.1d1f/10.172d7/-14.1ee8,6.30bccfe6e2fff/5.02bcacba55bff/-1e.01b9,7.106b/-2.6715e5f4cd806/-20.13f0,-5.21c5a8193c2006/b.1e52b81c163fe/-1a.040d8d32c27fd,-4.1d1f/10.172d7/-14.1ee8,-6.30bccfe6e2fff/5.02bcacba55bff/-1e.01b9,-7.106b/-2.6715e5f4cd806/-20.13f0,-10.2645cdf53c7fe/b.1e52b81c163fe/-14.3395dcf223802,-d.b95/10.172d7/-10.2644596dcdffe,-13.c2a1c1fb6002/5.02bcacba55bff/-18.05509aa495802,-14.1ee8/-2.6715e5f4cd806/-1a.040d8d32c27fd,-18.05520f2c04002/b.1e52b81c163fe/-b.178c,-13.c2a1c1fb6002/10.172d7/-9.9e1,-1b.2fd/5.02bcacba55bff/-d.15154e2bf47ff,-1e.01ba/-2.6715e5f4cd806/-e.124d,-1a.2a2a9c57e8ffe/b.1e52b81c163fe/0,-15.cbb/10.172d7/0,-1e.1fe8/5.02bcacba55bff/0,-21.d89/-2.6715e5f4cd806/0,-d.15154e2bf47ff/15.0983/6.18f5bef855801,-9.fd/15.0983/b.178d,-3.bcf/15.0983/e.124d,3.bcf/15.0983/e.124d,9.fd/15.0983/b.178d,d.15154e2bf47ff/15.0983/6.18f5bef855801,e.20d6/15.0983/0,d.15154e2bf47ff/15.0983/-6.18f5bef855801,9.fd/15.0983/-b.178c,3.abe4fddccfffc/15.0983/-e.124d,-3.bcf/15.0983/-e.124d,-9.fd/15.0983/-b.178c,-d.15154e2bf47ff/15.0983/-6.18f5bef855801,-e.20d6/15.0983/0,0/-2b.18547/0,-9.2329/1d.18537dfbb4c03/8.2a,-2.129f/14.17ca5/c.1b93,-9.2329/14.17ca5/8.2a,-2.129f/1d.18537dfbb4c03/c.1b93,5.25b1/14.17ca5/b.87e,5.25b1/1d.18537dfbb4c03/b.87e,b.128b/14.17ca5/4.25014bfbfb001,b.128b/1d.18537dfbb4c03/4.25014bfbfb001,b.128b/14.17ca5/-3.23f8,b.128b/1d.18537dfbb4c03/-3.23f8,5.25b1/14.17ca5/-a.1bb1b16ef4001,5.25b1/1d.18537dfbb4c03/-a.1bb1b16ef4001,-2.129f/14.17ca5/-b.261d,-2.129f/1d.18537dfbb4c03/-b.261d,-9.2329/14.17ca5/-7.2735e93f74fff,-2.1bf1/1d.18537dfbb4c03/-b.20bb,-9.2329/1d.18537dfbb4c03/-7.2735e93f74fff,-c.207e/14.17ca5/0.81b5a6ccbfe000,-c.207e/1d.18537dfbb4c03/0.81b5a6ccbfe000,-3.1286/1d.18537dfbb4c03/-5.01550f7dca7005,-4.23da/21.81d3/-10.1d63,-4.016a/24.10603/-d.8f1,-4.14b7/20.56be38fed601/-10.e75,-4.100a/25.327d/-d.1e00803833001,-5.6e80ec5717ff/21.12809/-11.888,-4.176b/25.fbb3/-d.332ba253a0ffe,-5.4bd/22.11260593c5ff/-11.1c3a,-4.16d3/26.f10d6f0d1ff/-e.119c2eef39001,-4.23d4/22.e37b/-12.c4164969e002,-4.e52/26.facd/-e.28b8fdf845ffe,-4.14ad/22.3330ba2da3bfc/-12.195b,-3.25cd/27.0a9b/-f.0322,-3.135a0484176ffd/27.4411/-a.4c0,-3.22f5/27.28d2753a53bfa/-a.a74,-4.0235/28.8089/-a.1aa01df9cdfff,-4.08a/28.56293605d601/-a.1b84,-3.303/29.1d1e37f4943fb/-a.2536,-3.dbe/29.17a61/-b.75e,-2.22fbcb591a6ffc/28.206a3acaee3fa/-6.177d,-3.abe4fddccfffc/29.3a61/-6.153c,-3.10b4/29.13885/-6.1d535543d57ff,-3.c5d0aa3d18003/2a.b30b/-6.1459,-3.02cb/2b.0176b/-6.22e,-2.186b/2b.1f0729b59c3fa/-6.185d,-2.e81/28.106f3/-2.1de7,-2.1941/29.479f/-2.1154,-2.1c49/29.2b01406013c04/-2.43c1e20927ffe,-2.174c/2a.132172732fbfb/-1.2032,-2.ac7/2a.3141f64ee1c04/-1.16f2,-1.31a/2b.1aceaee79e01/-1.f59ed36131002,-1.24e9/27.156eccb500404/-0.49f,-2.764/27.118ff/0.f68,-2.911/28.289b/0.2470,-2.02b5/28.1c0ca47f6e3fc/1.115b,-1.1977420dbfffff/28.14bd1/1.2252,-1.76dc0e039affe/29.35a7/2.78f,-2.0336/20.2e5eded059ff/-10.934,-2.ea/24.01be0425cc3fa/-d.0cd2e97dc801,-1.1795/24.33b3/-d.78c,-2.1936af13f88ffe/20.a645/-10.017f,-3.e6d/20.ba59/-f.26db,-2.22d7/24.054b82ca92bfa/-c.2574,-3.26ef/20.10167/-10.6d,-3.1409/24.7a8f/-d.0148,-1.1e56/26.a1e5/-a.4bc,-1.8d/26.1e65a2fcb2bfb/-a.a6d,-2.10d7/26.bef5/-a.028903f282fff,-3.0194/26.12539/-a.01c0,-1.a3e/27.2b3fd31fa3405/-6.22a1,-0.1833/27.328503c0b4bfb/-6.2696,-1.23a2/27.2fc1caa4edbfa/-6.1e88,-2.13c1/28.2e81/-6.1ab1,-0.1bab/27.17737/-3.1076,-0.0c85f804d550008/28.01cb1/-3.1d1,-1.dc3/28.0bd1/-3.aec,-1.2426/28.fae25542e405/-3.0218,-1.1294a8442ce001/27.2b39/-0.15af,-0.25b1/26.35c9bff1e6406/-0.221d,-0.cb4/26.15f8b/-1.01a0,0.767ba5f7425ffc/26.17d59/-1.01b5,-1.156c/20.119d1/-10.1628,-1.0272/24.1610536de9bfc/-d.1b348befd4ffe,-1.645/21.0240fbc2a53fb/-11.000ba43b73ffe,-0.19ed/24.12e03/-d.20e8,-0.21fa6846a1c000/21.a947/-11.134a,-0.9e7376b4fb8008/25.617b/-e.f9,-0.21f8969d57a000/21.15185/-11.3e6,-0.10d4/25.2bd2cc8e3bc06/-e.19b9,-0.16e8/26.2fa0527a003fc/-a.1a9479be5a001,-0.3b66c05ca50002/27.72f1/-a.1b7b,0.02f4/27.14fa5/-a.252d,0.49f/28.1b23cfda5e405/-b.aacd9849f001,-0.0a69f4d2ff74000/28.c067529a2bfb/-7.02f4,0.f9b/28.11071/-7.585,0.2a4/29.74d1/-7.65772b2ec9005,0.1d84/29.366b46aacfc05/-7.72a,0.132d73d07f6001/28.1458dba98ebfb/-3.e6f46e7b8f003,1.0c4736b457ffe/28.13321/-3.fb,1.d5d/29.7b89/-3.08f,1.125b/29.15e19/-2.198d15fd398003,0.24fb/27.987a0eb253fb/-0.1f3d2fd9829001,1.11c0/27.19e3ab7768406/-0.160d,1.327/27.13d03/-0.515,1.25e1/28.4e7f/0.ee6,-1.5ad5f5e59e002/22.107581ce50c06/-12.1221,-0.1835/26.1042934a353fc/-f.01f,-1.137292f1801fff/22.10509/-12.210f,-0.26d5/26.122d7/-f.12c0ad44fb7ff,-2.051/22.36bcc44afbc06/-13.432,-1.1436/27.93a111f0a01/-f.1de64eb26e002,-2.1bab/23.83d4cd429bfa/-13.8a9,-2.568/27.7dcd/-f.6,-2.1c496595b3a002/27.9637/-f.1547,-3.d12f0c4c60003/23.b2944c006bfb/-13.6f5,-3.f27e7869c9ffc/27.19bbf16c85ff/-f.14c82e2213fff,-3.26e3/23.2bcf/-12.37c084b988002,-0.01b2/29.02283/-b.f2e,-0.f5f/29.23f072ca8c406/-b.1e6374318d001,-0.1fe65a59702fff/2a.05145bf0e9ff/-b.17e3,-1.12040c31a7efff/2a.1ce3dd8a91ff/-b.17e4,-2.650/2a.1649140fbf405/-b.217,-2.1f24/2a.6a31/-b.16210f83607ff,0.18a0/2a.228ed63ca8bfb/-7.588154fea4ffb,0.c37/2b.4925/-7.062,-0.67f/2b.f95b/-7.0a1,-0.1afe573b00dfff/2b.3423be86b93fc/-6.342bbf6f99001,-1.1002/2b.18547/-6.2e33cbf45ffff,-2.020d/2b.3160856af23fb/-6.2871b00c1f7ff,1.deff29d742fff/2a.1aaf6587d63fb/-2.e07983637d003,1.493/2a.17ead/-2.02d9,0.1a38/2b.933f/-1.1ea8,0.03d5/2b.f325/-1.15d4,-0.1553/2b.10e69/-1.104b,-1.7bb/2b.e245/-1.e96,1.2435/28.214a5443673fa/0.23ee,1.1aaa/28.16a7b/1.f5d9088a74fff,1.a2f/29.4be1/1.1ee23cc9085002,0.1b72/29.8c19/2.753,0.0275/29.170640d5dc3fc/2.de6,-0.1746/29.806b/2.dfb,-1.005f/1c.d651/2.211,-1.1801/1c.105b3/1.d44f6743c7002,-1.fc7/1c.221ec9806c3fc/1.237865256ffffc,-1.183d/1c.2aae4e38793f9/0.19699d98140fff,-1.1077/1c.2f761f227bc03/0.0374,-1.0171/1c.33f52d98e9403/-0.116b,-0.13b3/1c.17efd/-0.20a2,0.2c16d449a9a000/1d.0193d0ce47bfd/-1.01a3,0.1bf3e78117bfff/1d.02e8549948c03/-1.01c3,1.105d/1d.012e3/-0.1e036947100001,1.2572/1d.07b7/-0.11fe,2.c8a842c0e9ffe/1c.17a25/0.018de76816d7fff,2.1604/1c.3310b68a24bfa/0.18b014248b5001,2.1641/1c.2e78eb1560c04/1.dcb,2.e7a/1c.29b11a2b5e3fa/1.22d10c4ecc8002,1.3da/1c.2530972d82405/2.1418,1.11b7/1c.216a57e6e6403/2.234e,0.203b/1c.d331/3.44f,0.658/1c.1d66fa68293fa/3.46f,-0.125a/1c.1d8e44b0d0bfa/2.2071817016c002";
			var geo0uvs:String ="0.e784/0.081ae,0.8f771/0.001d96,0.85acb/0.0018ea,0.a3c98/0.0de1,0.95049/0.00246e,0.11762/0.09822,0.eec6/0.02c17,0.af08e/0.010b5,0.9011b/0.0330c,0.a4f70/0.0b4a4,0.868c3/0.037ee,0.92663/0.01304,0.7a8e1/0.039c3,0.7b03d/0.0c1bc,0.6e774/0.03830,0.63719/0.01311,0.64acf/0.03384,0.505a8/0.0b58e,0.5f1f7/0.02cad,0.6f3e/0.0a836,0.5ee83/0.002504,0.451b2/0.09947,0.64125/0.001e0e,0.4f2d0/0.08bb5,0.6d97d/0.00192d,0.61bdd/0.08231,0.79960/0.001757,0.79204/0.07e9d,0.f756/0.01350d,0.b6046/0.014224,0.c5937/0.015550,0.c62e1/0.016ac7,0.b7b5a/0.017e46,0.9d07e/0.18bf3,0.c57c/0.19117,0.8f4a/0.27ab,0.3e1fa/0.017f97,0.2e909/0.016c6b,0.2df5f/0.0156f4,0.3c6e6/0.014375,0.571c2/0.0135c8,0.78b69/0.0130a4,0.a2d7a/0.3767,0.1f8f/0.23a70,0.d8c05/0.2527b,0.d9824/0.26d65,0.c75d1/0.285d9,0.a5e8d/0.296fe,0.7bc5c/0.29d71,0.514c5/0.297e9,0.2ee65/0.2877f,0.1b63b/0.26f74,0.1aa1c/0.2548a,0.2cc70/0.23c17,0.4e3b4/0.22af1,0.785e5/0.2247e,0.a90e3/0.35452,0.d0b22/0.3673c,0.d7ce9/0.4b973,0.ace99/0.4a4fb,0.ae384/0.60b20,0.da37a/0.6201e,0.e72dd/0.382f1,0.f022c/0.4d76e,0.f32c0/0.63edf,0.e80d5/0.3a1f5,0.f1148/0.4f8fe,1/0.6614c,0.d3244/0.3be22,0.da740/0.5177b,0.dcee9/0.a675,0.ac96f/0.3d1e5,0.b0bc9/0.52cdd,0.b2247/0.69680,0.7c082/0.3d953,0.7c315/0.534e7,0.7c3f5/0.69ebf,0.4b15d/0.3d2f3,0.473a7/0.52e02,0.45ebc/0.697ac,0.2371e/0.3c009,0.1c558/0.5198a,0.19ec6/0.a6ab,0.0cf63/0.3a454,0.04015/0.4fb8f,0.00f80/0.663ed,0.0c16c/0.38551,0.030f8/0.4d9ff,0/0.64181,0.20ffc/0.36923,0.19b00/0.4bb82,0.017357/0.6223b,0.478d1/0.35560,0.43677/0.4a620,0.41ff9/0.60c4c,0.781bf/0.34df3,0.77f2c/0.49e16,0.77e4c/0.6040d,0.1f8f/0.a1b4d,0.f756/0.b161e,0.b6046/0.b2335,0.a2d7a/0.a0ae4,0.d0b22/0.8e2c3,0.a90e3/0.8cfd9,0.d7ce9/0.c0ed,0.ace99/0.774cb,0.d8c05/0.a3359,0.c5937/0.b3662,0.e72dd/0.8fe78,0.f022c/0.7a73e,0.d9824/0.a4e42,0.c62e1/0.b4bd8,0.e80d5/0.91d7c,0.f1148/0.7c8cd,0.c75d1/0.a66b6,0.b7b5a/0.b5f58,0.d3244/0.939aa,0.da740/0.7e74b,0.a5e8d/0.a77dc,0.9d07e/0.b6d05,0.ac96f/0.94d6c,0.b0bc9/0.7fcad,0.7bc5c/0.a7e4e,0.c57c/0.b7229,0.7c082/0.954da,0.7c315/0.804b7,0.514c5/0.a78c6,0.8f4a/0.b6dc0,0.4b15d/0.94e7a,0.473a7/0.7fdd1,0.2ee65/0.a685d,0.3e1fa/0.b60a9,0.2371e/0.93b90,0.1c558/0.ca89,0.1b63b/0.a5051,0.2e909/0.b4d7c,0.0cf63/0.91fdb,0.04015/0.7cb5e,0.1aa1c/0.a3568,0.2df5f/0.b3806,0.0c16c/0.e67c,0.030f8/0.7a9cf,0.2cc70/0.a1cf4,0.3c6e6/0.b2486,0.20ffc/0.8e4aa,0.19b00/0.78b51,0.4e3b4/0.a0bce,0.571c2/0.b16d9,0.478d1/0.8d0e7,0.43677/0.775ef,0.785e5/0.a055c,0.78b69/0.b11b5,0.781bf/0.8c97a,0.77f2c/0.76de5,0.e784/0.be423,0.a3c98/0.13153,0.11762/0.bfa96,0.af08e/0.13427,0.a4f70/0.c1718,0.92663/0.13676,0.7b03d/0.c2430,0.63719/0.13683,0.505a8/0.c1802,0.6f3e/0.c0aaa,0.451b2/0.bfbbb,0.4f2d0/0.bee29,0.61bdd/0.be4a5,0.79204/0.be111,0.5/0,0.98240/0.156ad,0.a83d7/0.be3a4,0.98240/0.bd305,0.a83d7/0.d7360,0.a359a/0.bf6c9,0.a359a/0.d8686,0.8bc24/0.1338d,0.8bc24/0.d933e,0.6c814/0.c03d8,0.6c814/0.d9395,0.54365/0.bf7a5,0.54365/0.d8761,0.4e3f7/0.be49d,0.4e3f7/0.d745a,0.5d670/0.12ec4,0.4ebc2/0.d73ce,0.5d670/0.d6365,0.7a95c/0.bccb5,0.7a95c/0.d5c72,0/0.58dc3,1/0,0.69e63/0,0.d7f48/0.b5353,0.b800e/0,0.e187/1,0.5/0.2c6e0,1/0,0/0,0.7a997/0.65fc4,1/0,0.76466/0,0.82664/0,0.0fab2/0,0/0.8e2d,1/0,0.18f4a/0.4e4dd,0.015db3/0.50e7a,0/0.ccdbb,0/0,0.35459/0.d1301,0.411d9/0.dc036,0.36c58/0.d03da,0.3fe55/0.dd37b,0.33743/0.d24a4,0.3e647/0.de9bb,0.317f1/0.d3707,0.3cc0b/0.e00ca,0.2f973/0.d4860,0.3b232/0.e1666,0.2dec6/0.d56fa,0.39b44/0.e2871,0.4bb00/0.e434e,0.4affc/0.e5b3e,0.768c/0.e76bd,0.490e1/0.e9319,0.732f/0.ead8b,0.47002/0.179f3,0.5814e/0.e9404,0.581f8/0.eae7c,0.58090/0.eccd1,0.57d3b/0.eec0d,0.5784b/0.f091f,0.5723c/0.f2130,0.65ff3/0.ea933,0.6704e/0.ec18c,0.68084/0.edd7f,0.68efe/0.efa52,0.69a51/0.f1531,0.a9bd/0.f2b7b,0.6ffef/0.e7775,0.71c29/0.e88b6,0.739b2/0.17612,0.755a5/0.eb17a,0.76d45/0.ec500,0.77e44/0.ed55c,0.3764c/0.cf74d,0.4215d/0.da8a9,0.4167f/0.daecb,0.38225/0.cf211,0.3846b/0.cf289,0.42444/0.da9b3,0.37ce9/0.cf8a9,0.697e/0.db1d1,0.4be99/0.e2533,0.788f/0.e2c5a,0.4c2b0/0.16a4a,0.4c173/0.e3144,0.57485/0.171d6,0.56e0e/0.e7a11,0.57a3c/0.e7468,0.e11/0.e8000,0.63d27/0.e8a86,0.63a1c/0.174fa,0.6450f/0.e8c45,0.6510c/0.e96d7,0.b0c7/0.e6aa2,0.6d60c/0.e637d,0.6cc7d/0.e62ba,0.6cc09/0.e686c,0.3620b/0.d01bc,0.404ba/0.dbb81,0.3475e/0.14e6f,0.3edcb/0.dcd8c,0.328e0/0.d21af,0.3d3f2/0.16384,0.3098d/0.d3413,0.5f5f/0.dfa37,0.4a887/0.e3ba7,0.498b4/0.e519a,0.487a8/0.e6c0d,0.47711/0.e8869,0.56778/0.e8ac5,0.5616a/0.ea2d5,0.55c79/0.ebfe8,0.db1/0.edf23,0.63c3a/0.ea14a,0.6434a/0.eb795,0.64e9e/0.17b72,0.65d19/0.eef46,0.6d4bb/0.e7405,0.6e5b9/0.e8461,0.6fd5a/0.17597,0.7194d/0.eacac,0.2ec78/0.d45b5,0.3a1a8/0.e1077,0.2d479/0.d54dd,0.38e24/0.e23bc,0.2c3e8/0.d600d,0.38111/0.e3221,0.2bc65/0.d662e,0.37bb9/0.e3a3f,0.37ea0/0.e3b4a,0.2beac/0.d66a6,0.3897f/0.e3527,0.2ca85/0.d6169,0.4688d/0.ea3e8,0.45d88/0.ebbd8,0.45716/0.17afd,0.455d9/0.ed841,0.459ef/0.ed9f3,0.462f3/0.ed2cb,0.557bd/0.efd79,0.88d7/0.f17f1,0.55b10/0.f2bf4,0.898c/0.f378d,0.56530/0.f3999,0.56ba7/0.f31e4,0.66d4e/0.f0b3a,0.67da9/0.f2393,0.10c4/0.f35ee,0.a8db/0.f4080,0.6a075/1,0.6a37f/0.f3b02,0.b8af/0.ec0aa,0.75310/0.ed1eb,0.76b3a/0.edebf,0.bfb2/0.ee5e3,0.78682/0.17d77,0.786f6/0.ee0f4,0.76d45/0.ec500,0.739b2/0.17612,0.755a5/0.eb17a,0.71c29/0.e88b6,0.6ffef/0.e7775,0.b0c7/0.e6aa2,0.6d60c/0.e637d,0.6cc7d/0.e62ba,0.6cc09/0.e686c,0.6d4bb/0.e7405,0.6e5b9/0.e8461,0.6fd5a/0.17597,0.7194d/0.eacac,0.b8af/0.ec0aa,0.75310/0.ed1eb,0.76b3a/0.edebf,0.bfb2/0.ee5e3,0.78682/0.17d77,0.786f6/0.ee0f4,0.77e44/0.ed55c";
			var geo0faces:String ="0,1,2,0,1,2,3,1,0,3,1,0,3,4,1,3,4,1,5,4,3,5,4,3,5,6,4,5,6,4,7,6,5,7,6,5,7,8,6,7,8,6,9,8,7,9,8,7,9,a,8,9,a,8,b,a,9,b,a,9,b,c,a,b,c,a,d,c,b,d,c,b,d,e,c,d,e,c,f,e,d,f,e,d,f,10,e,f,10,e,11,10,f,11,10,f,11,12,10,11,12,10,13,12,11,13,12,11,13,14,12,13,14,12,15,14,13,15,14,13,15,16,14,15,16,14,17,16,15,17,16,15,17,18,16,17,18,16,19,18,17,19,18,17,19,1a,18,19,1a,18,1b,1a,19,1b,1a,19,1b,2,1a,1b,2,1a,0,2,1b,0,2,1b,1c,3,0,1c,3,0,1d,3,1c,1d,3,1c,1d,5,3,1d,5,3,1e,5,1d,1e,5,1d,1e,7,5,1e,7,5,1f,7,1e,1f,7,1e,1f,9,7,1f,9,7,20,9,1f,20,9,1f,20,b,9,20,b,9,21,b,20,21,b,20,21,d,b,21,d,b,22,d,21,22,d,21,22,f,d,22,f,d,23,f,22,23,f,22,23,11,f,23,11,f,24,11,23,24,11,23,24,13,11,24,13,11,25,13,24,25,13,24,25,15,13,25,15,13,26,15,25,26,15,25,26,17,15,26,17,15,27,17,26,27,17,26,27,19,17,27,19,17,28,19,27,28,19,27,28,1b,19,28,1b,19,29,1b,28,29,1b,28,29,0,1b,29,0,1b,1c,0,29,1c,0,29,2a,1d,1c,2a,1d,1c,2b,1d,2a,2b,1d,2a,2b,1e,1d,2b,1e,1d,2c,1e,2b,2c,1e,2b,2c,1f,1e,2c,1f,1e,2d,1f,2c,2d,1f,2c,2d,20,1f,2d,20,1f,2e,20,2d,2e,20,2d,2e,21,20,2e,21,20,2f,21,2e,2f,21,2e,2f,22,21,2f,22,21,30,22,2f,30,22,2f,30,23,22,30,23,22,31,23,30,31,23,30,31,24,23,31,24,23,32,24,31,32,24,31,32,25,24,32,25,24,33,25,32,33,25,32,33,26,25,33,26,25,34,26,33,34,26,33,34,27,26,34,27,26,35,27,34,35,27,34,35,28,27,35,28,27,36,28,35,36,28,35,36,29,28,36,29,28,37,29,36,37,29,36,37,1c,29,37,1c,29,2a,1c,37,2a,1c,37,38,2b,2a,38,2b,2a,38,39,2b,38,39,2b,38,3a,39,38,3a,39,3b,3a,38,3b,3a,38,3a,3c,3d,3a,3c,3d,3b,3c,3a,3b,3c,3a,39,2c,2b,39,2c,2b,39,3e,2c,39,3e,2c,39,3f,3e,39,3f,3e,3a,3f,39,3a,3f,39,3f,3d,40,3f,3d,40,3a,3d,3f,3a,3d,3f,3e,2d,2c,3e,2d,2c,3e,41,2d,3e,41,2d,3e,42,41,3e,42,41,3f,42,3e,3f,42,3e,42,40,43,42,40,43,3f,40,42,3f,40,42,41,2e,2d,41,2e,2d,41,44,2e,41,44,2e,41,45,44,41,45,44,42,45,41,42,45,41,45,43,46,45,43,46,42,43,45,42,43,45,44,2f,2e,44,2f,2e,44,47,2f,44,47,2f,44,48,47,44,48,47,45,48,44,45,48,44,48,46,49,48,46,49,45,46,48,45,46,48,47,30,2f,47,30,2f,47,4a,30,47,4a,30,47,4b,4a,47,4b,4a,48,4b,47,48,4b,47,4b,49,4c,4b,49,4c,48,49,4b,48,49,4b,4a,31,30,4a,31,30,4a,4d,31,4a,4d,31,4a,4e,4d,4a,4e,4d,4b,4e,4a,4b,4e,4a,4e,4c,4f,4e,4c,4f,4b,4c,4e,4b,4c,4e,4d,32,31,4d,32,31,4d,50,32,4d,50,32,4d,51,50,4d,51,50,4e,51,4d,4e,51,4d,51,4f,52,51,4f,52,4e,4f,51,4e,4f,51,50,33,32,50,33,32,50,53,33,50,53,33,50,54,53,50,54,53,51,54,50,51,54,50,54,52,55,54,52,55,51,52,54,51,52,54,53,34,33,53,34,33,53,56,34,53,56,34,53,57,56,53,57,56,54,57,53,54,57,53,57,55,58,57,55,58,54,55,57,54,55,57,56,35,34,56,35,34,56,59,35,56,59,35,56,5a,59,56,5a,59,57,5a,56,57,5a,56,5a,58,5b,5a,58,5b,57,58,5a,57,58,5a,59,36,35,59,36,35,59,5c,36,59,5c,36,59,5d,5c,59,5d,5c,5a,5d,59,5a,5d,59,5d,5b,5e,5d,5b,5e,5a,5b,5d,5a,5b,5d,5c,37,36,5c,37,36,5c,5f,37,5c,5f,37,5c,60,5f,5c,60,5f,5d,60,5c,5d,60,5c,60,5e,61,60,5e,61,5d,5e,60,5d,5e,60,5f,2a,37,5f,2a,37,5f,38,2a,5f,38,2a,5f,3b,38,5f,3b,38,60,3b,5f,60,3b,5f,3b,61,3c,3b,61,3c,60,61,3b,60,61,3b,62,63,64,62,63,64,62,65,63,62,65,63,66,65,62,66,65,62,66,67,65,66,67,65,68,67,66,68,67,66,68,69,67,68,69,67,69,3d,3c,69,3d,3c,3d,69,68,3d,69,68,6a,64,6b,6a,64,6b,6a,62,64,6a,62,64,6c,62,6a,6c,62,6a,6c,66,62,6c,66,62,6d,66,6c,6d,66,6c,6d,68,66,6d,68,66,68,40,3d,68,40,3d,40,68,6d,40,68,6d,6e,6b,6f,6e,6b,6f,6e,6a,6b,6e,6a,6b,70,6a,6e,70,6a,6e,70,6c,6a,70,6c,6a,71,6c,70,71,6c,70,71,6d,6c,71,6d,6c,6d,43,40,6d,43,40,43,6d,71,43,6d,71,72,6f,73,72,6f,73,72,6e,6f,72,6e,6f,74,6e,72,74,6e,72,74,70,6e,74,70,6e,75,70,74,75,70,74,75,71,70,75,71,70,71,46,43,71,46,43,46,71,75,46,71,75,76,73,77,76,73,77,76,72,73,76,72,73,78,72,76,78,72,76,78,74,72,78,74,72,79,74,78,79,74,78,79,75,74,79,75,74,75,49,46,75,49,46,49,75,79,49,75,79,7a,77,7b,7a,77,7b,7a,76,77,7a,76,77,7c,76,7a,7c,76,7a,7c,78,76,7c,78,76,7d,78,7c,7d,78,7c,7d,79,78,7d,79,78,79,4c,49,79,4c,49,4c,79,7d,4c,79,7d,7e,7b,7f,7e,7b,7f,7e,7a,7b,7e,7a,7b,80,7a,7e,80,7a,7e,80,7c,7a,80,7c,7a,81,7c,80,81,7c,80,81,7d,7c,81,7d,7c,7d,4f,4c,7d,4f,4c,4f,7d,81,4f,7d,81,82,7f,83,82,7f,83,82,7e,7f,82,7e,7f,84,7e,82,84,7e,82,84,80,7e,84,80,7e,85,80,84,85,80,84,85,81,80,85,81,80,81,52,4f,81,52,4f,52,81,85,52,81,85,86,83,87,86,83,87,86,82,83,86,82,83,88,82,86,88,82,86,88,84,82,88,84,82,89,84,88,89,84,88,89,85,84,89,85,84,85,55,52,85,55,52,55,85,89,55,85,89,8a,87,8b,8a,87,8b,8a,86,87,8a,86,87,8c,86,8a,8c,86,8a,8c,88,86,8c,88,86,8d,88,8c,8d,88,8c,8d,89,88,8d,89,88,89,58,55,89,58,55,58,89,8d,58,89,8d,8e,8b,8f,8e,8b,8f,8e,8a,8b,8e,8a,8b,90,8a,8e,90,8a,8e,90,8c,8a,90,8c,8a,91,8c,90,91,8c,90,91,8d,8c,91,8d,8c,8d,5b,58,8d,5b,58,5b,8d,91,5b,8d,91,92,8f,93,92,8f,93,92,8e,8f,92,8e,8f,94,8e,92,94,8e,92,94,90,8e,94,90,8e,95,90,94,95,90,94,95,91,90,95,91,90,91,5e,5b,91,5e,5b,5e,91,95,5e,91,95,96,93,97,96,93,97,96,92,93,96,92,93,98,92,96,98,92,96,98,94,92,98,94,92,99,94,98,99,94,98,99,95,94,99,95,94,95,61,5e,95,61,5e,61,95,99,61,95,99,65,97,63,65,97,63,65,96,97,65,96,97,67,96,65,67,96,65,67,98,96,67,98,96,69,98,67,69,98,67,69,99,98,69,99,98,99,3c,61,99,3c,61,3c,99,69,3c,99,69,9a,64,63,9a,64,63,9b,64,9a,9b,64,9a,9b,6b,64,9b,6b,64,9c,6b,9b,9c,6b,9b,9c,6f,6b,9c,6f,6b,9d,6f,9c,9d,6f,9c,9d,73,6f,9d,73,6f,9e,73,9d,9e,73,9d,9e,77,73,9e,77,73,9f,77,9e,9f,77,9e,9f,7b,77,9f,7b,77,a0,7b,9f,a0,7b,9f,a0,7f,7b,a0,7f,7b,a1,7f,a0,a1,7f,a0,a1,83,7f,a1,83,7f,a2,83,a1,a2,83,a1,a2,87,83,a2,87,83,a3,87,a2,a3,87,a2,a3,8b,87,a3,8b,87,a4,8b,a3,a4,8b,a3,a4,8f,8b,a4,8f,8b,a5,8f,a4,a5,8f,a4,a5,93,8f,a5,93,8f,a6,93,a5,a6,93,a5,a6,97,93,a6,97,93,a7,97,a6,a7,97,a6,a7,63,97,a7,63,97,9a,63,a7,9a,63,a7,a8,2,1,a8,2,1,a8,1,4,a8,1,4,a8,4,6,a8,4,6,a8,6,8,a8,6,8,a8,8,a,a8,8,a,a8,a,c,a8,a,c,a8,c,e,a8,c,e,a8,e,10,a8,e,10,a8,10,12,a8,10,12,a8,12,14,a8,12,14,a8,14,16,a8,14,16,a8,16,18,a8,16,18,a8,18,1a,a8,18,1a,a8,1a,2,a8,1a,2,9a,9c,9b,9a,9c,9b,a0,a6,a5,a0,a6,a5,a4,a0,a5,a4,a0,a5,a6,9f,a7,a6,9f,a7,a1,a0,a2,a1,a0,a2,a2,a0,a3,a2,a0,a3,a3,a0,a4,a3,a0,a4,a0,9f,a6,a0,9f,a6,9f,9e,a7,9f,9e,a7,a7,9e,9a,a7,9e,9a,9d,9c,9a,9d,9c,9a,9e,9d,9a,9e,9d,9a,a9,aa,ab,a9,aa,ab,ac,aa,a9,ac,aa,a9,ac,ad,aa,ac,ad,aa,ae,ad,ac,ae,ad,ac,ae,af,ad,ae,af,ad,b0,af,ae,b0,af,ae,b0,b1,af,b0,b1,af,b2,b1,b0,b2,b1,b0,b2,b3,b1,b2,b3,b1,b4,b3,b2,b4,b3,b2,b4,b5,b3,b4,b5,b3,b6,b5,b4,b6,b5,b4,b6,b7,b5,b6,b7,b5,b7,b6,b8,b7,b6,b8,b9,b7,b8,b9,b7,b8,b9,ba,b7,b9,ba,b7,bb,ba,b9,bb,ba,b9,bb,ab,ba,bb,ab,ba,a9,ab,bb,a9,ab,bb,bb,ac,a9,bc,bd,be,b0,ac,b2,bf,c0,c1,ae,ac,b0,c2,c3,c4,bc,bb,b9,c5,c6,c7,bc,b4,b2,c8,c9,ca,bb,bc,b2,cb,c8,ca,bc,b8,b6,c5,cc,cd,b4,bc,b6,ce,c5,cd,b8,bc,b9,cc,c5,c7,b2,ac,bb,c1,c0,cf,bd,be,bf,d0,d1,d2,bd,c0,be,d0,d3,d1,c1,c0,bd,d4,d3,d0,c1,c2,c0,d4,d5,d3,c3,c2,c1,d6,d5,d4,c3,c4,c2,d6,d7,d5,c5,c4,c3,d8,d7,d6,c5,c6,c4,d8,d9,d7,c6,c7,c8,d9,da,db,c5,c7,c6,d8,da,d9,c0,c9,be,d3,dc,d1,c0,ca,c9,d3,dd,dc,c2,ca,c0,d5,dd,d3,c4,ca,c2,d7,dd,d5,c4,cb,ca,d7,de,dd,c4,cc,cb,d7,df,de,c6,cc,c4,d9,df,d7,c6,cd,cc,d9,e0,df,cd,c8,ce,e0,db,e1,c6,c8,cd,d9,db,e0,ca,cf,c9,dd,e2,dc,ca,d0,cf,dd,e3,e2,cb,d0,ca,de,e3,dd,cc,d0,cb,df,e3,de,cc,d1,d0,df,e4,e3,cd,d1,cc,e0,e4,df,cd,d2,d1,e0,e5,e4,cd,d3,d2,e0,e6,e5,d3,ce,d4,e6,e1,e7,cd,ce,d3,e0,e1,e6,d0,d5,cf,e3,e8,e2,d0,d6,d5,e3,e9,e8,d1,d6,d0,e4,e9,e3,d2,d6,d1,e5,e9,e4,d2,d7,d6,e5,ea,e9,d3,d7,d2,e6,ea,e5,d3,d8,d7,e6,eb,ea,d3,d9,d8,e6,ec,eb,d9,d4,da,ec,e7,ed,d3,d4,d9,e6,e7,ec,d6,db,d5,e9,ee,e8,d6,dc,db,e9,ef,ee,d7,dc,d6,ea,ef,e9,d8,dc,d7,eb,ef,ea,d8,dd,dc,eb,f0,ef,d9,dd,d8,ec,f0,eb,d9,de,dd,ec,f1,f0,d9,df,de,ec,f2,f1,e0,d9,da,f3,ec,ed,d9,e0,df,ec,f3,f2,e1,e2,e3,f4,f5,f6,e4,e2,e1,f7,f5,f4,e5,e2,e4,f8,f5,f7,e5,e6,e2,f8,f9,f5,e7,e6,e5,fa,f9,f8,e7,e8,e6,fa,fb,f9,e8,bf,be,fb,d2,d1,e7,bf,e8,fa,d2,fb,e3,e9,ea,f6,fc,fd,e2,e9,e3,f5,fc,f6,e6,e9,e2,f9,fc,f5,e6,eb,e9,f9,fe,fc,e8,eb,e6,fb,fe,f9,e8,ec,eb,fb,ff,fe,ec,be,c9,ff,d1,dc,e8,be,ec,fb,d1,ff,ea,ed,ee,fd,100,101,e9,ed,ea,fc,100,fd,eb,ed,e9,fe,100,fc,eb,ef,ed,fe,102,100,ec,ef,eb,ff,102,fe,ec,f0,ef,ff,103,102,cf,ec,c9,e2,ff,dc,ec,cf,f0,ff,e2,103,ee,f1,f2,101,104,105,ed,f1,ee,100,104,101,ef,f1,ed,102,104,100,ef,f3,f1,102,106,104,f0,f3,ef,103,106,102,f0,f4,f3,103,107,106,f4,cf,d5,107,e2,e8,f0,cf,f4,103,e2,107,f5,d5,db,108,e8,ee,f5,f4,d5,108,107,e8,f6,f4,f5,109,107,108,f6,f3,f4,109,106,107,f7,f3,f6,10a,106,109,f7,f1,f3,10a,104,106,f2,f7,f8,105,10a,10b,f7,f2,f1,10a,105,104,e3,f9,e1,f6,10c,f4,fa,f9,e3,10d,10c,f6,fa,fb,f9,10d,10e,10c,fc,fb,fa,10f,10e,10d,fc,fd,fb,10f,110,10e,fe,fd,fc,111,110,10f,ff,fe,100,112,111,113,fe,ff,fd,111,112,110,ea,fa,e3,fd,10d,f6,101,fa,ea,114,10d,fd,101,fc,fa,114,10f,10d,102,fc,101,115,10f,114,102,fe,fc,115,111,10f,103,fe,102,116,111,115,100,103,104,113,116,117,103,100,fe,116,113,111,ee,101,ea,101,114,fd,105,101,ee,118,114,101,105,102,101,118,115,114,106,102,105,119,115,118,106,103,102,119,116,115,107,103,106,11a,116,119,103,108,104,116,11b,117,107,108,103,11a,11b,116,f2,105,ee,105,118,101,109,105,f2,11c,118,105,109,106,105,11c,119,118,109,107,106,11c,11a,119,10a,107,109,11d,11a,11c,10b,107,10a,11e,11a,11d,107,10c,108,11a,11f,11b,10b,10c,107,11e,11f,11a,f8,109,f2,10b,11c,105,10d,109,f8,120,11c,10b,10d,10a,109,120,11d,11c,10e,10a,10d,121,11d,120,10e,10b,10a,121,11e,11d,10f,10b,10e,122,11e,121,10b,110,10c,11e,123,11f,10f,110,10b,122,123,11e,100,111,ff,113,124,112,112,111,100,125,124,113,112,113,111,125,126,124,114,113,112,127,126,125,114,115,113,127,128,126,116,115,114,129,128,127,116,117,115,129,12a,128,118,117,116,12b,12a,129,119,117,118,12c,12a,12b,119,11a,117,12c,12d,12a,11b,11a,119,12e,12d,12c,11b,11c,11a,12e,12f,12d,c8,11c,11b,db,12f,12e,c8,c7,11c,db,da,12f,104,112,100,117,125,113,11d,112,104,130,125,117,11d,114,112,130,127,125,11d,116,114,130,129,127,11e,116,11d,131,129,130,11f,116,11e,132,129,131,11f,118,116,132,12b,129,120,118,11f,133,12b,132,120,119,118,133,12c,12b,121,119,120,134,12c,133,122,119,121,135,12c,134,122,11b,119,135,12e,12c,122,c8,11b,135,db,12e,122,ce,c8,135,e1,db,108,11d,104,11b,130,117,123,11d,108,136,130,11b,123,11e,11d,136,131,130,123,11f,11e,136,132,131,124,11f,123,137,132,136,125,11f,124,138,132,137,125,120,11f,138,133,132,126,120,125,139,133,138,126,121,120,139,134,133,127,121,126,13a,134,139,128,121,127,13b,134,13a,128,122,121,13b,135,134,128,ce,122,13b,e1,135,128,d4,ce,13b,e7,e1,10c,123,108,11f,136,11b,10c,124,123,11f,137,136,129,124,10c,13c,137,11f,129,125,124,13c,138,137,12a,125,129,13d,138,13c,12a,126,125,13d,139,138,12b,126,12a,13e,139,13d,12c,126,12b,13f,139,13e,12c,127,126,13f,13a,139,12d,127,12c,140,13a,13f,12e,127,12d,141,13a,140,12e,128,127,141,13b,13a,da,128,12e,ed,13b,141,da,d4,128,ed,e7,13b,110,129,10c,123,13c,11f,110,12a,129,123,13d,13c,12f,12a,110,142,13d,123,12f,12b,12a,142,13e,13d,130,12b,12f,143,13e,142,131,12b,130,144,13e,143,131,12c,12b,144,13f,13e,132,12c,131,145,13f,144,132,12d,12c,145,140,13f,133,12d,132,146,140,145,134,12d,133,147,140,146,134,12e,12d,147,141,140,e0,12e,134,f3,141,147,e0,da,12e,f3,ed,141,bd,c3,c1,d0,d6,d4,bd,c5,c3,d0,d8,d6,bd,c7,c5,d0,da,d8,bd,11c,c7,d0,12f,da,bd,11a,11c,d0,12d,12f,bd,117,11a,d0,12a,12d,bd,115,117,d0,128,12a,bd,113,115,d0,126,128,bd,111,113,d0,124,126,bd,ff,111,d0,112,124,bd,fd,ff,d0,110,112,bd,fb,fd,d0,10e,110,bd,f9,fb,d0,10c,10e,bd,e1,f9,d0,f4,10c,bd,e4,e1,d0,f7,f4,bd,e5,e4,d0,f8,f7,bd,e7,e5,d0,fa,f8,bd,bf,e7,d0,d2,fa,135,136,137,148,149,14a,135,138,136,148,14b,149,135,139,138,148,14c,14b,135,13a,139,148,14d,14c,135,13b,13a,148,14e,14d,135,13c,13b,148,14f,14e,135,13d,13c,148,150,14f,135,13e,13d,148,151,150,135,13f,13e,148,152,151,135,140,13f,148,153,152,135,141,140,148,154,153,135,142,141,148,155,154,135,143,142,148,156,155,135,144,143,148,157,156,135,145,144,148,158,157,135,146,145,148,159,158,135,147,146,148,15a,159,135,148,147,148,15b,15a,137,dd,de,14a,f0,f1,136,dd,137,149,f0,14a,136,dc,dd,149,ef,f0,138,dc,136,14b,ef,149,138,db,dc,14b,ee,ef,139,db,138,14c,ee,14b,139,f5,db,14c,108,ee,13a,f5,139,14d,108,14c,13a,f6,f5,14d,109,108,13b,f6,13a,14e,109,14d,13b,f7,f6,14e,10a,109,13c,f7,13b,14f,10a,14e,f7,13d,f8,10a,150,10b,13c,13d,f7,14f,150,10a,f8,13e,10d,10b,151,120,13d,13e,f8,150,151,10b,10d,13f,10e,120,152,121,13e,13f,10d,151,152,120,10e,140,10f,121,153,122,13f,140,10e,152,153,121,10f,141,110,122,154,123,140,141,10f,153,154,122,110,142,12f,123,155,142,141,142,110,154,155,123,12f,143,130,142,156,143,142,143,12f,155,156,142,130,144,131,143,157,144,143,144,130,156,157,143,131,145,132,144,158,145,144,145,131,157,158,144,132,146,133,145,159,146,145,146,132,158,159,145,146,134,133,159,147,146,147,134,146,15a,147,159,147,e0,134,15a,f3,147,148,e0,147,15b,f3,15a,148,df,e0,15b,f2,f3,135,df,148,148,f2,15b,135,de,df,2,2,2,137,de,135,2,2,2";
			var geo0:FacesDefinition = new FacesDefinition();
			geo0.f = buildFaces( geo0faces.split(","),  buildVertices(read(geo0vert).split(",")), buildUVs(read(geo0uvs).split(",")) );
			geos.push(geo0);
		}
		
		private function buildFaces(aFaces:Array, vVerts:Vector.<Vertex>, vUVs:Vector.<UV>):Vector.<Face>
		{
			var vFaces:Vector.<Face> = new Vector.<Face>();
			var f:Face;
			for(var i:int = 0;i<aFaces.length;i+=6){
				f = new Face( vVerts[parseInt(aFaces[i], 16)],
					vVerts[parseInt(aFaces[i+1], 16)],
					vVerts[parseInt(aFaces[i+2], 16)],
					null,
					vUVs[parseInt(aFaces[i+3], 16)],
					vUVs[parseInt(aFaces[i+4], 16)],
					vUVs[parseInt(aFaces[i+5], 16)]);
				vFaces.push(f);
			}
			
			return vFaces;
		}
		
		private function buildVertices(aVerts:Array):Vector.<Vertex>
		{
			var tmpv:Array;
			var vVerts:Vector.<Vertex> = new Vector.<Vertex>();
			for(var i:int = 0;i<aVerts.length;i++){
				tmpv = aVerts[i].split("/");
				vVerts[i] = new Vertex( parseFloat(tmpv[0])*_scale, parseFloat(tmpv[1])*_scale, parseFloat(tmpv[2])*_scale  );
			}
			return vVerts;
		}
		
		private function buildUVs(aUvs:Array):Vector.<UV>
		{
			var tmpv:Array;
			var vUVs:Vector.<UV> = new Vector.<UV>();
			for(var i:int = 0;i<aUvs.length;++i){
				tmpv = aUvs[i].split("/");
				vUVs[i] = new UV(parseFloat(tmpv[0]), parseFloat(tmpv[1]));
			}
			
			return vUVs;
		}
		
		
		private function buildMaterials():void
		{
			_textureDataMap["Health"] = new health_texture();
			
			_textureDataMap["Fire"] = new fire_texture();

			_textureDataMap["Water"] = new water_texture();
			
			_textureDataMap["Ice"] = new ice_texture();

			_textureDataMap["Acid"] = new acid_texture();

			_textureDataMap["Shield"] = new shield_texture();

			_textureDataMap["Joker"] = new joker_texture();
		}
		
		public function applyMaterialToMesh(id:String, textureName:String):void
		{
			var material:BitmapData = (_textureDataMap[textureName] as Bitmap).bitmapData;
			
			for(var i:int;i<meshes.length;++i){
				if(meshes[i].name == id){
					if(!material){
						trace("Embed of "+id+" failed! Check source path or if CS4 call 911!");
					} else {
						meshes[i].material = new BitmapMaterial(material);
					}
					break;
				}
			}
		}
		
		private function cleanUp():void
		{
			for(var i:int = 0;i<1;++i){
				objs["obj"+i] == null;
			}
			aV = null;
			aU = null;
		}
		
		private function addContainers():void
		{
			aC = [];
			aC.push(this);
			var m0:Matrix3D = new Matrix3D();
			m0.rawData = Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0*_scale,0*_scale,0*_scale,1]);
			transform = m0;
			name = "main";
			
			var cont1:ObjectContainer3D = new ObjectContainer3D();
			aC.push(cont1);
			addChild(cont1);
			var m1:Matrix3D = new Matrix3D();
			m1.rawData = Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0*_scale,0*_scale,0*_scale,1]);
			cont1.transform = m1;
			cont1.name = "default0";
			
			var cont2:ObjectContainer3D = new ObjectContainer3D();
			aC.push(cont2);
			addChild(cont2);
			var m2:Matrix3D = new Matrix3D();
			m2.rawData = Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,0*_scale,0*_scale,0*_scale,1]);
			cont2.transform = m2;
			cont2.name = "polySurface0";

			
		}
		
		public function get containers():Array
		{
			return aC;
		}
		
		
		public function get meshes():Array
		{
			return oList;
		}
		
		
		private function read(str:String):String
		{
			var start:int= 0;
			var chunk:String;
			var end:int= 0;
			var dec:String = "";
			var charcount:int = str.length;
			for(var i:int = 0;i<charcount;++i){
				if (str.charCodeAt(i)>=44 && str.charCodeAt(i)<= 48 ){
					dec+= str.substring(i, i+1);
				}else{
					start = i;
					chunk = "";
					while(str.charCodeAt(i)!=44 && str.charCodeAt(i)!= 45 && str.charCodeAt(i)!= 46 && str.charCodeAt(i)!= 47 && i<=charcount){
						i++;
					}
					chunk = ""+parseInt("0x"+str.substring(start, i), 16 );
					dec+= chunk;
					i--;
				}
			}
			return dec;
		}
		
	}
}
class FacesDefinition
{
	import away3d.core.base.Face;
	import away3d.core.base.Geometry;
	public var f:Vector.<Face>;
	public var geometry:Geometry;
}